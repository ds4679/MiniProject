import React from 'react';
import { useLocation, useHistory } from 'react-router-dom';
import Header from '../components/Header';

const Result = () => {
  const location = useLocation();
  const history = useHistory();

  const { predictionData } = location.state || {}; // Get the prediction data passed from PredictionPage

  const handleReset = () => {
    history.push('/'); // Navigate back to PredictionPage
  };

  if (!predictionData) {
    return (
      <div className="text-center mt-10">
        <h2 className="text-xl font-bold">No prediction result available.</h2>
      </div>
    );
  }

  return (
    <>
      <Header />
      <div className="bg-white dark:bg-gray-900 text-gray-900 dark:text-white min-h-screen transition duration-500">
        <div className="flex flex-col items-center p-8">
          <h2 className="text-3xl font-bold mb-6 fade-in">Prediction Result</h2>

          <div className="mt-8 p-6 rounded-lg shadow-xl w-full max-w-2xl bg-gray-100 dark:bg-gray-800 bg-opacity-80 fade-in">
            <h3 className="text-2xl font-semibold mb-2">
              üß† Predicted Stage: <span className="text-green-500">{predictionData.class}</span>
            </h3>
            <p className="text-lg mb-2">
              Confidence: <span className="font-medium">{predictionData.confidence.toFixed(2)}%</span>
            </p>

            <div className="space-y-2">
              {predictionData.class_names.map((label, idx) => (
                <div key={idx} className="mb-1">
                  <p className="text-sm font-semibold">{label}</p>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-4">
                    <div
                      className={`h-4 rounded-full transition-all duration-500 ${
                        label === predictionData.class ? 'bg-yellow-400' : 'bg-blue-400'
                      }`}
                      style={{ width: `${(predictionData.all_confidences[idx] * 100).toFixed(2)}%` }}
                    ></div>
                  </div>
                </div>
              ))}
            </div>

            <div className="mt-6 p-6 bg-white dark:bg-gray-800 rounded-xl shadow space-y-4">
              <h3 className="text-xl font-bold text-blue-700 dark:text-blue-300">AI Medical Explanation</h3>

              <div>
                <h4 className="font-semibold text-green-700 dark:text-green-400">1. Explanation</h4>
                <p className="text-sm text-gray-700 dark:text-gray-200">{predictionData.details.explanation}</p>
              </div>

              <div>
                <h4 className="font-semibold text-green-700 dark:text-green-400">2. Care and Treatment Guidance</h4>
                <p className="text-sm text-gray-700 dark:text-gray-200">{predictionData.details.care}</p>
              </div>

              <div>
                <h4 className="font-semibold text-green-700 dark:text-green-400">3. Recommended Diet</h4>
                <p className="text-sm text-gray-700 dark:text-gray-200">{predictionData.details.diet}</p>
              </div>

              <div>
                <h4 className="font-semibold text-green-700 dark:text-green-400">4. Useful Health Tips</h4>
                <p className="text-sm text-gray-700 dark:text-gray-200">{predictionData.details.tips}</p>
              </div>

              <p className="text-xs text-gray-600 dark:text-gray-400 mt-4">
                ‚ö†Ô∏è This prediction is generated by AI and should not be used as a sole diagnostic tool.
                Please consult a medical professional for confirmation and treatment.
              </p>
            </div>
          </div>

          <button
            onClick={handleReset}
            className="mt-6 bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded-lg font-semibold transition-all"
          >
            Reset
          </button>
        </div>
      </div>
    </>
  );
};

export default Result;
